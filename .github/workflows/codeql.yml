name: "CodeQL"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    # Ignore changes to common non-code files.
    paths-ignore:
      - '**/*.md'
      - '**/*.rst'
      - '**/*.txt'
      - '**/*.yml'
      - '**/*.yaml'
      - '**/*.json'
      - '**/*.ini'
      - '**/*.env'
  schedule:
    - cron: '25 6 * * 3'

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: Checkout code
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1

      # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@c36620d31ac7c881962c3d9dd939c40ec9434f2b # v3.26.12
        with:
          languages: go
          # xref: https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs
          # xref: https://codeql.github.com/codeql-query-help/go/
          queries: security-and-quality

      # Build the project, and run CodeQL analysis.
      # We do not make use of autobuild as this would run the first Make
      # target, which includes a lot more than just the Go files we want to
      # scan.
      - name: Build
        run: make install

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@c36620d31ac7c881962c3d9dd939c40ec9434f2b # v3.26.12
        with:
          category: "/language:go"
